{"version":3,"sources":["sachin.jpeg","InfoBox/Infobox.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","margin","maxWidth","image","width","height","img","display","maxHeight","InfoBox","props","classes","Paper","className","Grid","container","item","ButtonBase","Avatar","variant","rounded","number","xs","sm","direction","Typography","gutterBottom","header","secondline","color","thirdline","main","backgroundColor","name","Footer","Box","justify","alignItems","menuButton","marginRight","title","float","appBar","app","textAlign","palette","text","secondary","large","media","overview","minHeight","info","profilePhoto","paddingTop","App","component","m","Card","CardActionArea","alt","src","CardContent","CardActions","Button","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.688805cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sachin.bbcf5979.jpeg\";","import React from 'react';\r\nimport {\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(2),\r\n        margin: 'auto',\r\n        maxWidth: 500,\r\n      },\r\n      image: {\r\n        width: 128,\r\n        height: 128,\r\n      },\r\n      img: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n      },\r\n}));\r\n\r\n\r\nfunction InfoBox(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.paper}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n            <Avatar variant=\"square\" className={classes.rounded}>\r\n              {props.number}\r\n            </Avatar>\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={3}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  {props.header}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  {props.secondline}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {props.thirdline}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    main: {\r\n        backgroundColor: '#212121',\r\n        height: '40vh'\r\n    },\r\n    name: {\r\n        color: 'white'\r\n    }\r\n}));\r\n\r\n\r\nfunction Footer() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box color=\"text.primary\" >\r\n        <Grid\r\n        className={classes.main}\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        >\r\n            <Grid item>\r\n                <Typography className={classes.name} gutterBottom>\r\n                    Sachin C\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography className={classes.name} gutterBottom>\r\n                    Web Developer\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography className={classes.name} gutterBottom>\r\n                    AI Enthusiast\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography className={classes.name} gutterBottom>\r\n                    Coding From India\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","/* eslint-disable no-unused-vars */\nimport React, { Fragment } from 'react';\nimport {\n  Typography,\n  Button\n} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport './App.css';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { dark } from '@material-ui/core/styles/createPalette';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport img from './sachin.jpeg'\nimport { GridOff } from '@material-ui/icons';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport InfoBox from './InfoBox/Infobox';\nimport Footer from './Footer/Footer';\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    float: 'left'\n  },\n  appBar: {\n    backgroundColor: '#424242',\n  },\n  app : {\n    backgroundColor: '#212121'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  name: {\n    textAlign: 'center',\n  },\n  root: {\n    backgroundColor: '#424242',\n    color: 'white',\n    width: 400\n  },\n  large: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n  },\n  media: {\n    height: 140,\n  },\n  overview: {\n    height: 500\n  },\n  main: {\n    minHeight: '80vh'\n  },\n  info: {\n    maxWidth: '99vw'\n  },\n  profilePhoto: {\n    paddingTop: 20\n  }\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Fragment> \n    <div className={classes.app} >\n      {/* <AppBar className={classes.appBar} position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Home\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar> */}\n      <Box component=\"span\" m={1}>\n        <Grid className={classes.main} \n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n            <Grid item >\n            <Card className={classes.root}>\n              <CardActionArea>\n              <Grid \n                  container\n                  direction=\"row-reverse\"\n                  justify=\"center\"\n                  alignItems=\"baseline\"\n                  >\n                  <Grid className={classes.profilePhoto} item >\n                    <Avatar alt=\"Remy Sharp\" src={img} className={classes.large} />\n                  </Grid>\n                </Grid>\n                <CardContent>\n                  <Typography className={classes.name} gutterBottom variant=\"h5\" component=\"h2\">\n                    Sachin C\n                  </Typography>\n                  <Typography className={classes.name} variant=\"body2\" color=\"white\" component=\"p\">\n                    Engineering tomorrow\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button href=\"https://www.linkedin.com/in/sachin-c-80b375125/\" color=\"primary\">\n                  Connect on LinkedIn\n                </Button>\n              </CardActions>\n            </Card>\n            </Grid>\n          </Grid>\n      </Box>\n    </div>\n    <Box component=\"span\" m={1}>\n    <Grid\n      className={classes.info}\n      container\n      direction=\"row\"\n      justify=\"space-evenly\"\n      alignItems=\"center\"\n      spacing={4}\n    >\n      <Grid item xs={5}>\n        <InfoBox number='1' header='Year Industry Experience' />\n      </Grid>\n      <Grid item xs={5} >\n        <InfoBox number='2' header='Internship Experiences'/>\n      </Grid>\n      <Grid item xs={5} >\n        <InfoBox number='1' header='Conference Publication'/>\n      </Grid>\n      <Grid item xs={5} >\n        <InfoBox number='4' header='Active Research Topics'/>\n      </Grid>\n    </Grid>\n    </Box>\n    <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}